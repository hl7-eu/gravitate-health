@startuml
actor       patient       as pat

participant Frontend as fe
participant Backend as be
participant EHR as ehr
/'
actor       Physician       as phy

boundary    Boundary    as Foo2
control     Control     as Foo3
entity      Entity      as Foo4
collections Collections as Foo6
queue       Queue       as Foo7
Foo -> Foo5 : To database
Foo -> Foo6 : To collections
Foo -> Foo7: To queue
database    MPI    as mpi

'/
/'phy -> ehr : add information across several appointments
'/
group Registration

pat -> fe : register
fe -> be : create profile
fe -> ehr : get ips 
note left of fe : <URL>/Patient?$summary={identifier}

end


group usage
fe -> pat: presents medication list based on ips
pat -> fe : asks for information for specific one drug
fe -> fe : gets medication resource code
fe -> be: searchs for epi using code as identifier for Medicinal Product
note left of fe
 <URL>/Composition?
 _language=<lang>
 &category=R&identifier=<code>
 end note
fe -> fe: gets id
be -> fe: returns epi bundle

end

group focusing
fe -> be: ask for focusing
note right of pat 
<URL>/focusing/focus/<bundle>
?preprocessors=preprocessing-service-manual
&lenses=<lenses>
&patientIdentifier=<pat_id>
end note

be -> fe: returns epi bundle



fe -> fe: checks lenses in extension
fe -> be: ask for lenses description and metada
note right of be
<URL>/fhir/Library?_id=<l1>,<l2>,..
OR 
Have lenses in the first response
OR
have cache of lenses already
end note
be -> fe: returns lenses description and metadata in a searchset
fe -> fe: checks data on extensions per section for aditional data.


fe -> fe: uses lenses and epi data to render the focused epi bundle with explanation


end
@enduml